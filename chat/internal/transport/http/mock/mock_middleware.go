// Code generated by MockGen. DO NOT EDIT.
// Source: middleware.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAuther is a mock of Auther interface.
type MockAuther struct {
	ctrl     *gomock.Controller
	recorder *MockAutherMockRecorder
}

// MockAutherMockRecorder is the mock recorder for MockAuther.
type MockAutherMockRecorder struct {
	mock *MockAuther
}

// NewMockAuther creates a new mock instance.
func NewMockAuther(ctrl *gomock.Controller) *MockAuther {
	mock := &MockAuther{ctrl: ctrl}
	mock.recorder = &MockAutherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuther) EXPECT() *MockAutherMockRecorder {
	return m.recorder
}

// GetId mocks base method.
func (m *MockAuther) GetId(ctx context.Context, token string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetId", ctx, token)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetId indicates an expected call of GetId.
func (mr *MockAutherMockRecorder) GetId(ctx, token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetId", reflect.TypeOf((*MockAuther)(nil).GetId), ctx, token)
}
