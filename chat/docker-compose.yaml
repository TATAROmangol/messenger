networks:
  chat-network:

services:
  chat:
    container_name: chat
    build: .
    ports:
      - "8080:8080"
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_MAX_CONN=${POSTGRES_MAX_CONN}
      - POSTGRES_MIN_CONN=${POSTGRES_MIN_CONN}
    depends_on:
      - postgres
    restart: on-failure
    networks:
      - chat-network

  postgres:
    container_name: postgres_container
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - chat-network

volumes:
  postgres:
